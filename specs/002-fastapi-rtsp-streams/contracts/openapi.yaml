openapi: 3.0.3
info:
  title: ProxiMeter Streams API
  version: 0.2.0
  description: |
    FastAPI application for managing and viewing RTSP camera streams.
    
    **Security Warning**: LAN-only deployment. No authentication. RTSP credentials stored in plaintext.
    Do NOT expose to the internet without proper hardening.
servers:
  - url: http://localhost:{port}
    variables:
      port:
        default: "8000"
paths:
  /health:
    get:
      summary: Health check
      description: Health check endpoint for container orchestration
      tags:
        - health
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
              example:
                status: ok
  /api/streams:
    get:
      summary: List all streams
      description: Returns all streams with credentials masked in rtsp_url
      tags:
        - streams
      responses:
        '200':
          description: List of streams (ordered by order field)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stream'
              example:
                - id: "550e8400-e29b-41d4-a716-446655440000"
                  name: "Front Door Camera"
                  rtsp_url: "rtsp://***:***@192.168.1.100:554/stream"
                  created_at: "2025-10-17T10:30:00Z"
                  order: 0
                  status: "Active"
                - id: "660e8400-e29b-41d4-a716-446655440001"
                  name: "Backyard Camera"
                  rtsp_url: "rtsp://***:***@192.168.1.101:554/stream"
                  created_at: "2025-10-17T11:00:00Z"
                  order: 1
                  status: "Inactive"
    post:
      summary: Create a new stream
      description: |
        Creates a new stream with validation and 2s RTSP connectivity probe.
        If probe fails, stream is saved with status=Inactive.
      tags:
        - streams
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewStream'
            example:
              name: "Front Door Camera"
              rtsp_url: "rtsp://admin:password@192.168.1.100:554/stream"
      responses:
        '201':
          description: Stream created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stream'
              example:
                id: "550e8400-e29b-41d4-a716-446655440000"
                name: "Front Door Camera"
                rtsp_url: "rtsp://***:***@192.168.1.100:554/stream"
                created_at: "2025-10-17T10:30:00Z"
                order: 0
                status: "Active"
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                duplicate_name:
                  value:
                    code: "DUPLICATE_NAME"
                    message: "Stream name already exists (case-insensitive)"
                    details:
                      name: "Front Door Camera"
                invalid_url:
                  value:
                    code: "INVALID_RTSP_URL"
                    message: "Invalid RTSP URL format"
                    details:
                      rtsp_url: "http://invalid.com"
  /api/streams/{id}:
    patch:
      summary: Update stream (partial)
      description: |
        Partially update stream name and/or rtsp_url.
        Re-validates and re-probes if rtsp_url is changed.
      tags:
        - streams
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Stream UUID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditStream'
            example:
              name: "Front Door Camera (Updated)"
      responses:
        '200':
          description: Stream updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stream'
              example:
                id: "550e8400-e29b-41d4-a716-446655440000"
                name: "Front Door Camera (Updated)"
                rtsp_url: "rtsp://***:***@192.168.1.100:554/stream"
                created_at: "2025-10-17T10:30:00Z"
                order: 0
                status: "Active"
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Stream not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "NOT_FOUND"
                message: "Stream not found"
                details:
                  id: "550e8400-e29b-41d4-a716-446655440000"
    delete:
      summary: Delete stream
      description: Deletes a stream and renumbers remaining streams
      tags:
        - streams
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Stream UUID
      responses:
        '204':
          description: Stream deleted successfully (no content)
        '404':
          description: Stream not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "NOT_FOUND"
                message: "Stream not found"
                details:
                  id: "550e8400-e29b-41d4-a716-446655440000"
  /api/streams/reorder:
    post:
      summary: Reorder streams
      description: |
        Idempotent reorder operation. Accepts array of stream IDs in desired order.
        No-op if order unchanged or ≤1 streams exist.
      tags:
        - streams
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - order
              properties:
                order:
                  type: array
                  items:
                    type: string
                    format: uuid
                  description: Array of stream UUIDs in desired order
            example:
              order:
                - "660e8400-e29b-41d4-a716-446655440001"
                - "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '200':
          description: Order updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "Streams reordered successfully"
        '400':
          description: Invalid order (missing IDs, duplicates, or unknown IDs)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                missing_ids:
                  value:
                    code: "INVALID_ORDER"
                    message: "Order array missing stream IDs"
                    details:
                      missing: ["550e8400-e29b-41d4-a716-446655440000"]
                duplicate_ids:
                  value:
                    code: "INVALID_ORDER"
                    message: "Order array contains duplicate IDs"
                    details:
                      duplicates: ["550e8400-e29b-41d4-a716-446655440000"]
  /play/{id}.mjpg:
    get:
      summary: MJPEG stream playback
      description: |
        Streams RTSP video as MJPEG (multipart/x-mixed-replace).
        Frame rate capped at ≤5 FPS. No audio.
        On error, stream ends gracefully.
      tags:
        - playback
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Stream UUID
      responses:
        '200':
          description: Multipart MJPEG stream
          headers:
            Content-Type:
              schema:
                type: string
                example: multipart/x-mixed-replace; boundary=frame
            Cache-Control:
              schema:
                type: string
                example: no-store
          content:
            multipart/x-mixed-replace:
              schema:
                type: string
                format: binary
        '404':
          description: Stream not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "NOT_FOUND"
                message: "Stream not found"
                details:
                  id: "550e8400-e29b-41d4-a716-446655440000"
components:
  schemas:
    Stream:
      type: object
      required: [id, name, rtsp_url, created_at, order, status]
      properties:
        id:
          type: string
          format: uuid
          description: Unique stream identifier
        name:
          type: string
          minLength: 1
          maxLength: 50
          description: Stream name (1-50 chars, unique case-insensitive)
        rtsp_url:
          type: string
          format: uri
          pattern: '^rtsp://'
          description: RTSP URL (credentials masked in responses)
        created_at:
          type: string
          format: date-time
          description: ISO8601 timestamp with timezone
        order:
          type: integer
          minimum: 0
          description: Display order (0-indexed, contiguous)
        status:
          type: string
          enum: [Active, Inactive]
          description: Stream status (Inactive if RTSP unreachable)
    NewStream:
      type: object
      required: [name, rtsp_url]
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
          description: Stream name (1-50 chars, unique case-insensitive)
        rtsp_url:
          type: string
          format: uri
          pattern: '^rtsp://'
          description: RTSP URL (e.g., rtsp://user:pass@host:port/path)
    EditStream:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
          description: Updated stream name (optional)
        rtsp_url:
          type: string
          format: uri
          pattern: '^rtsp://'
          description: Updated RTSP URL (optional)
    Error:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
          description: Error code (INVALID_RTSP_URL, DUPLICATE_NAME, INVALID_ORDER, NOT_FOUND)
          enum:
            - INVALID_RTSP_URL
            - DUPLICATE_NAME
            - INVALID_ORDER
            - NOT_FOUND
            - VALIDATION_ERROR
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          description: Additional error context (optional)
          additionalProperties: true
